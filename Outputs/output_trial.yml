AWSTemplateFormatVersion: 2010-09-09
Description: AMI selection based on region

Mappings:
  MyRegionAMI:
    ap-south-1:
      AMIID: ami-0bcf5425cdc1d8a85
    ap-southeast-1:
      AMIID: ami-03ca998611da0fe12
  MyENV:
    dev:
      InstanceId: t2.micro
    prod:
      InstanceId: t2.micro

Parameters:
  MyKeyName:
    Description: Select the KeyName
    Type: AWS::EC2::KeyPair::KeyName
  MyEnvList:
    Description: Select an environment from list
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod

Conditions:
  CreateNewSG: !Equals [!Ref MyEnvList, dev]

Resources:
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap
        - MyRegionAMI
        - !Ref 'AWS::Region'
        - AMIID
      InstanceType: !FindInMap
        - MyENV
        - !Ref MyEnvList
        - InstanceId
      KeyName: !Ref MyKeyName
      SecurityGroups: !If [CreateNewSG, [!Ref NewSG], !Ref 'AWS::NoValue']
  NewSG:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateNewSG
    Properties:
      GroupDescription: Dev Env SG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
Outputs:
  GetInstanceId:
    Description: Get the instance ID of created instance using CF
    Value: !Ref MyEC2Instance
  GetInstanceAZ:
    Description: Get the instance Availability Zone
    Value: !GetAtt MyEC2Instance.AvailabilityZone
    Export:
      Name: !Sub "${AWS::StackName}-InstanceAZ"
  GetInstancePublicDNS:
    Description: Get the instance Public DNS Name
    Value: !GetAtt MyEC2Instance.PublicDnsName
  GetInstancePrivateDNS:
    Description: Get the instance Private DNS Name
    Value: !GetAtt MyEC2Instance.PrivateDnsName
  GetInstanceSG:
    Description: Get the instance Security Group
    Condition: CreateNewSG
    Value: !Ref NewSG
    Export:
      Name: !Join [":", [!Ref 'AWS::StackName', InstanceSG]]